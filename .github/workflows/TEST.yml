name: Build CI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install packages
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: |
          yarn install

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run linter
        run: |
          yarn lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run TSC
        run: |
          yarn type-check

  format-check:
    name: Run Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run Prettier
        run: |
          yarn format-check

  test-vitest:
    name: 'Run Tests with Vitest'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run tests
        run: |
          yarn test:ci

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [install, test-vitest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build React App
        run: |
          yarn build

  upload-bundle-stats:
    name: Upload Bundle Stats
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'Andrewshin-7th-technology-student' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build and upload stats
        run: |
          yarn build
        env:
          CODECOV_API_URL: ${{ secrets.CODECOV_API_URL }}
          CODECOV_ORG_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
          CODECOV_BUNDLE_NAME: 'build-ci'
          UPLOAD_CODECOV_BUNDLE_STATS: true
          GAZEBO_SHA: ${{ github.event.pull_request.head.sha }}
``` ```yaml
name: Build CI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install packages
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: |
          yarn install

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run linter
        run: |
          yarn lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run TSC
        run: |
          yarn type-check

  format-check:
    name: Run Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run Prettier
        run: |
          yarn format-check

  test-vitest:
    name: 'Run Tests with Vitest'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run tests
        run: |
          yarn test:ci

  build:
    ```yaml
    name: Build Application
    runs-on: ubuntu-latest
    needs: [install, test-vitest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build React App
        run: |
          yarn build

  upload-bundle-stats:
    name: Upload Bundle Stats
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'Andrewshin-7th-technology-student' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build and upload stats
        run: |
          yarn build
        env:
          CODECOV_API_URL: ${{ secrets.CODECOV_API_URL }}
          CODECOV_ORG_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
          CODECOV_BUNDLE_NAME: 'build-ci'
          UPLOAD_CODECOV_BUNDLE_STATS: true
          GAZEBO_SHA: ${{ github.event.pull_request.head.sha }}
``` ```yaml
name: Build CI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install packages
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: |
          yarn install

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run linter
        run: |
          yarn lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run TSC
        run: |
          yarn type-check

  format-check:
    name: Run Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run Prettier
        run: |
          yarn format-check

  test-vitest:
    name: 'Run Tests with Vitest'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run tests
        run: |
          yarn test:ci

  build:
    ```yaml
    name: Build Application
    runs-on: ubuntu-latest
    needs: [install, test-vitest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build React App
        run: |
          yarn build

  upload-bundle-stats:
    name: Upload Bundle Stats
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'Andrewshin-7th-technology-student' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build and upload stats
        run: |
          yarn build
        env:
          CODECOV_API_URL: ${{ secrets.CODECOV_API_URL }}
          CODECOV_ORG_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
          CODECOV_BUNDLE_NAME: 'build-ci'
          UPLOAD_CODECOV_BUNDLE_STATS: true
          GAZEBO_SHA: ${{ github.event.pull_request.head.sha }}
``` ```yaml
name: Build CI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install packages
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: |
          yarn install

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run linter
        run: |
          yarn lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run TSC
        run: |
          yarn type-check

  format-check:
    name: Run Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run Prettier
        run: |
          yarn format-check

  test-vitest:
    name: 'Run Tests with Vitest'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run tests
        run: |
          yarn test:ci

  build:
   ```yaml
    name: Build Application
    runs-on: ubuntu-latest
    needs: [install, test-vitest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build React App
        run: |
          yarn build

  upload-bundle-stats:
    name: Upload Bundle Stats
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'Andrewshin-7th-technology-student' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build and upload stats
        run: |
          yarn build
        env:
          CODECOV_API_URL: ${{ secrets.CODECOV_API_URL }}
          CODECOV_ORG_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
          CODECOV_BUNDLE_NAME: 'build-ci'
          UPLOAD_CODECOV_BUNDLE_STATS: true
          GAZEBO_SHA: ${{ github.event.pull_request.head.sha }}
``````yaml
name: Build CI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install packages
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: |
          yarn install

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run linter
        run: |
          yarn lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run TSC
        run: |
          yarn type-check

  format-check:
    name: Run Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run Prettier
        run: |
          yarn format-check

  test-vitest:
    name: 'Run Tests with Vitest'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-build-ci-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run tests
        run: |
          yarn test:ci

   
